<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auth.mapper.UserMapper">
	<resultMap type="com.auth.entity.User" id="userResult">
		<id column="user_id" property="userId" />
		<result column="user_name" property="userName" />
		<result column="user_code" property="userCode" />
		<result column="user_pwd" property="userPwd" />
		<result column="user_type" property="userType" />
		<result column="user_state" property="userState" />
		<result column="is_delete" property="isDelete" />
		<result column="create_by" property="createBy" />
		<result column="create_time" property="createTime" />
		<result column="update_by" property="updateBy" />
		<result column="update_time" property="updateTime" />
		<result column="getCode" property="getCode"/>
	</resultMap>


	<!-- 根据用户名查密码 -->
	<select id="findUserByName" parameterType="java.lang.String"
		resultMap="userResult">
		SELECT * FROM user_info
		WHERE user_code = #{userCode} and is_delete = 0;
	</select>

	<!-- 查询所有用户 <select id="findAllUser" resultMap="userResult"> SELECT * FROM 
		user_info WHERE is_delete = '0' </select> -->

	<!-- 添加用户 -->
	<insert id="addUser" parameterType="com.auth.entity.User">
		INSERT INTO user_info
		(user_name,user_code,user_pwd,user_type,user_state,is_delete,create_by,create_time)
		VALUES(#{userName},#{userCode},MD5(#{userPwd}),#{userType},0,0,#{createBy},NOW())

	</insert>
	<!-- 根据用户id删除用户 -->
	<delete id="deleteUser" parameterType="int">
		UPDATE user_info SET
		is_delete = '1' WHERE user_id = #{userId}
	</delete>
	<!-- 根据用户id修改用户昵称 -->
	<update id="updateUser" parameterType="com.auth.entity.User">
		UPDATE user_info SET
		user_name
		=#{userName},user_type=#{userType},update_by=#{updateBy},update_time=NOW()
		WHERE user_id =#{userId}
	</update>
	<!-- 根据用户id重置用户密码 -->
	<update id="updatePwd" parameterType="int">
		UPDATE user_info SET
		user_pwd= MD5('123456')
		WHERE user_id=#{userId}
	</update>
	<!-- 根据用户id修改用户类型 -->
	<update id="updateState" parameterType="com.auth.entity.User">
		UPDATE user_info SET
		user_state=#{userState}
		WHERE user_id=#{userId}
	</update>
	<!-- 查询用户个数 -->
	<select id="selectCount" parameterType="java.util.HashMap"
		resultType="int">
		select COUNT(0) from `user_info`
		<where>
			<if test="user.userCode!=null and user.userCode!=''">
				and `user_code` LIKE CONCAT('%', #{user.userCode},'%')
			</if>
			<if test="user.userType!=null and user.userType!=''">
				and `user_type` = #{user.userType}
			</if>
			<if test="user.userState!=null and user.userState!=''">
				and `user_state` = #{user.userState}
			</if>
			and `is_delete`= '0'
		</where>

	</select>

	<!-- 分页查询 -->
	<select id="selectUserPage" parameterType="java.util.HashMap"
		resultMap="userResult">
		select user_id,user_name,user_code,user_code,user_pwd,user_type,
			user_state,is_delete,GET_USER_CODE(create_by) as getCode,create_time,
			update_by,update_time
		 from `user_info`
		<where>
			<if test="user.userCode!=null and user.userCode!=''">
				and `user_code` LIKE CONCAT('%', #{user.userCode},'%')
			</if>
			<if test="user.userType!=null and user.userType!=''">
				and `user_type` = #{user.userType}
			</if>
			<if test="user.userState!=null and user.userState!=''">
				and `user_state` = #{user.userState}
			</if>
			and `is_delete`= '0'
		</where>
		LIMIT #{Page.pageIndex},#{Page.pageNum}

	</select>
	<!-- 删除已存在的角色 -->
	<delete id="deleteRole" parameterType="int">
		DELETE FROM user_role
		WHERE user_id = #{userId}
	</delete>
	<!-- 分配角色 -->
	<insert id="assignRoles" parameterType="java.util.HashMap">
		INSERT INTO user_role
		(role_id,user_id) VALUES(#{roleId},#{userId})
	</insert>
	<!-- 根据用户id查询权限 -->
	<select id="findAuthByid" parameterType="int" resultType="string">
		SELECT GROUP_CONCAT(auth_id) FROM user_auth WHERE user_id = #{userId}
	</select>
	<!-- 根据用户id删除用户 -->
	<delete id="deleteAuthById" parameterType="int">
		DELETE FROM user_auth WHERE user_id=#{userId}
	</delete>
	<!-- 修改权限 -->
	<insert id="insertAuthById" parameterType="java.util.HashMap">
		INSERT INTO user_auth (user_id,auth_id) values(#{userId},#{authId})
	</insert>
</mapper>
